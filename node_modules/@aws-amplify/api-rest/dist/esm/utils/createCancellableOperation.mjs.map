{"version":3,"file":"createCancellableOperation.mjs","sources":["../../../src/utils/createCancellableOperation.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { CanceledError } from '../errors';\nimport { parseRestApiServiceError } from './serviceError';\nimport { logger } from './logger';\n/**\n * @internal\n */\nexport function createCancellableOperation(handler, abortController) {\n    const isInternalPost = (handler) => !!abortController;\n    // For creating a cancellable operation for public REST APIs, we need to create an AbortController\n    // internally. Whereas for internal POST APIs, we need to accept in the AbortController from the\n    // callers.\n    const publicApisAbortController = new AbortController();\n    const publicApisAbortSignal = publicApisAbortController.signal;\n    const internalPostAbortSignal = abortController?.signal;\n    const job = async () => {\n        try {\n            const response = await (isInternalPost(handler)\n                ? handler()\n                : handler(publicApisAbortSignal));\n            if (response.statusCode >= 300) {\n                throw await parseRestApiServiceError(response);\n            }\n            return response;\n        }\n        catch (error) {\n            const abortSignal = internalPostAbortSignal ?? publicApisAbortSignal;\n            if (error.name === 'AbortError' || abortSignal?.aborted === true) {\n                const canceledError = new CanceledError({\n                    ...(abortSignal.reason ? { message: abortSignal.reason } : undefined),\n                    underlyingError: error,\n                });\n                logger.debug(error);\n                throw canceledError;\n            }\n            logger.debug(error);\n            throw error;\n        }\n    };\n    if (isInternalPost(handler)) {\n        return job();\n    }\n    else {\n        const cancel = (abortMessage) => {\n            if (publicApisAbortSignal.aborted === true) {\n                return;\n            }\n            publicApisAbortController.abort(abortMessage);\n            // Abort reason is not widely support enough across runtimes and and browsers, so we set it\n            // if it is not already set.\n            if (abortMessage && publicApisAbortSignal.reason !== abortMessage) {\n                publicApisAbortSignal['reason'] =\n                    abortMessage;\n            }\n        };\n        return { response: job(), cancel };\n    }\n}\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAIA;AACA;AACA;AACO,SAAS,0BAA0B,CAAC,OAAO,EAAE,eAAe,EAAE;AACrE,IAAI,MAAM,cAAc,GAAG,CAAC,OAAO,KAAK,CAAC,CAAC,eAAe,CAAC;AAC1D;AACA;AACA;AACA,IAAI,MAAM,yBAAyB,GAAG,IAAI,eAAe,EAAE,CAAC;AAC5D,IAAI,MAAM,qBAAqB,GAAG,yBAAyB,CAAC,MAAM,CAAC;AACnE,IAAI,MAAM,uBAAuB,GAAG,eAAe,EAAE,MAAM,CAAC;AAC5D,IAAI,MAAM,GAAG,GAAG,YAAY;AAC5B,QAAQ,IAAI;AACZ,YAAY,MAAM,QAAQ,GAAG,OAAO,cAAc,CAAC,OAAO,CAAC;AAC3D,kBAAkB,OAAO,EAAE;AAC3B,kBAAkB,OAAO,CAAC,qBAAqB,CAAC,CAAC,CAAC;AAClD,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,GAAG,EAAE;AAC5C,gBAAgB,MAAM,MAAM,wBAAwB,CAAC,QAAQ,CAAC,CAAC;AAC/D,aAAa;AACb,YAAY,OAAO,QAAQ,CAAC;AAC5B,SAAS;AACT,QAAQ,OAAO,KAAK,EAAE;AACtB,YAAY,MAAM,WAAW,GAAG,uBAAuB,IAAI,qBAAqB,CAAC;AACjF,YAAY,IAAI,KAAK,CAAC,IAAI,KAAK,YAAY,IAAI,WAAW,EAAE,OAAO,KAAK,IAAI,EAAE;AAC9E,gBAAgB,MAAM,aAAa,GAAG,IAAI,aAAa,CAAC;AACxD,oBAAoB,IAAI,WAAW,CAAC,MAAM,GAAG,EAAE,OAAO,EAAE,WAAW,CAAC,MAAM,EAAE,GAAG,SAAS,CAAC;AACzF,oBAAoB,eAAe,EAAE,KAAK;AAC1C,iBAAiB,CAAC,CAAC;AACnB,gBAAgB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpC,gBAAgB,MAAM,aAAa,CAAC;AACpC,aAAa;AACb,YAAY,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AAChC,YAAY,MAAM,KAAK,CAAC;AACxB,SAAS;AACT,KAAK,CAAC;AACN,IAAI,IAAI,cAAc,CAAQ,CAAC,EAAE;AACjC,QAAQ,OAAO,GAAG,EAAE,CAAC;AACrB,KAAK;AACL,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,CAAC,YAAY,KAAK;AACzC,YAAY,IAAI,qBAAqB,CAAC,OAAO,KAAK,IAAI,EAAE;AACxD,gBAAgB,OAAO;AACvB,aAAa;AACb,YAAY,yBAAyB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;AAC1D;AACA;AACA,YAAY,IAAI,YAAY,IAAI,qBAAqB,CAAC,MAAM,KAAK,YAAY,EAAE;AAC/E,gBAAgB,qBAAqB,CAAC,QAAQ,CAAC;AAC/C,oBAAoB,YAAY,CAAC;AACjC,aAAa;AACb,SAAS,CAAC;AACV,QAAQ,OAAO,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,MAAM,EAAE,CAAC;AAC3C,KAAK;AACL;;;;"}