'use strict';

// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
// SPDX-License-Identifier: Apache-2.0
Object.defineProperty(exports, "__esModule", { value: true });
exports.destroyAmplifyServerContext = exports.getAmplifyServerContext = exports.createAmplifyServerContext = void 0;
const serverContextRegistry_1 = require("./serverContextRegistry");
const singleton_1 = require("../../singleton");
/**
 * Creates an Amplify server context.
 * @param amplifyConfig The Amplify resource config.
 * @param libraryOptions The Amplify library options.
 * @returns The Amplify server context spec.
 */
const createAmplifyServerContext = (amplifyConfig, libraryOptions) => {
    const amplify = new singleton_1.AmplifyClass();
    amplify.configure(amplifyConfig, libraryOptions);
    return serverContextRegistry_1.serverContextRegistry.register({
        amplify,
    });
};
exports.createAmplifyServerContext = createAmplifyServerContext;
/**
 * Returns an Amplify server context.
 * @param contextSpec The context spec used to get the Amplify server context.
 * @returns The Amplify server context.
 */
const getAmplifyServerContext = (contextSpec) => {
    const context = serverContextRegistry_1.serverContextRegistry.get(contextSpec);
    if (context) {
        return context;
    }
    throw new Error('Attempted to get the Amplify Server Context that may have been destroyed.');
};
exports.getAmplifyServerContext = getAmplifyServerContext;
/**
 * Destroys an Amplify server context.
 * @param contextSpec The context spec used to destroy the Amplify server context.
 */
const destroyAmplifyServerContext = (contextSpec) => {
    serverContextRegistry_1.serverContextRegistry.deregister(contextSpec);
};
exports.destroyAmplifyServerContext = destroyAmplifyServerContext;
//# sourceMappingURL=serverContext.js.map
