import { AuthConfig, AuthTokens, FetchAuthSessionOptions, KeyValueStorageInterface } from '@aws-amplify/core';
import { refreshAuthTokens } from '../utils/refreshAuthTokens';
import { DefaultTokenStore } from './TokenStore';
import { TokenOrchestrator } from './TokenOrchestrator';
import { CognitoUserPoolTokenProviderType } from './types';
declare class CognitoUserPoolsTokenProviderClass implements CognitoUserPoolTokenProviderType {
    authTokenStore: DefaultTokenStore;
    tokenOrchestrator: TokenOrchestrator;
    constructor();
    getTokens({ forceRefresh }?: FetchAuthSessionOptions): Promise<AuthTokens | null>;
    setKeyValueStorage(keyValueStorage: KeyValueStorageInterface): void;
    setWaitForInflightOAuth(waitForInflightOAuth: () => Promise<void>): void;
    setAuthConfig(authConfig: AuthConfig): void;
}
export declare const cognitoUserPoolsTokenProvider: CognitoUserPoolsTokenProviderClass;
export declare const tokenOrchestrator: TokenOrchestrator;
export { CognitoUserPoolTokenProviderType, DefaultTokenStore, TokenOrchestrator, refreshAuthTokens, };
