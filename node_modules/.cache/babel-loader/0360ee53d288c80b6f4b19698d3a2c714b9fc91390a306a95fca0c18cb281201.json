{"ast":null,"code":"import { getDnsSuffix } from '../../clients/endpoints/getDnsSuffix.mjs';\nimport { unauthenticatedHandler } from '../../clients/handlers/unauthenticated.mjs';\nimport { jitteredBackoff } from '../../clients/middleware/retry/jitteredBackoff.mjs';\nimport { getRetryDecider } from '../../clients/middleware/retry/defaultRetryDecider.mjs';\nimport '@aws-crypto/sha256-js';\nimport '@smithy/util-hex-encoding';\nimport { AmplifyUrl } from '../../utils/amplifyUrl/index.mjs';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler.mjs';\nimport { parseJsonError } from '../../clients/serde/json.mjs';\nimport { getAmplifyUserAgent } from '../../Platform/index.mjs';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = _ref => {\n  let {\n    region\n  } = _ref;\n  return {\n    url: new AmplifyUrl(\"https://cognito-identity.\".concat(region, \".\").concat(getDnsSuffix(region)))\n  };\n};\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddleware = () => (next, context) => async function disableCacheMiddleware(request) {\n  request.headers['cache-control'] = 'no-store';\n  return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nconst cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddleware]);\n/**\n * @internal\n */\nconst defaultConfig = {\n  service: SERVICE_NAME,\n  endpointResolver,\n  retryDecider: getRetryDecider(parseJsonError),\n  computeDelay: jitteredBackoff,\n  userAgentValue: getAmplifyUserAgent(),\n  cache: 'no-store'\n};\nobserveFrameworkChanges(() => {\n  defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nconst getSharedHeaders = operation => ({\n  'content-type': 'application/x-amz-json-1.1',\n  'x-amz-target': \"AWSCognitoIdentityService.\".concat(operation)\n});\n/**\n * @internal\n */\nconst buildHttpRpcRequest = (_ref2, headers, body) => {\n  let {\n    url\n  } = _ref2;\n  return {\n    headers,\n    url,\n    body,\n    method: 'POST'\n  };\n};\nexport { buildHttpRpcRequest, cognitoIdentityTransferHandler, defaultConfig, getSharedHeaders };","map":{"version":3,"names":["SERVICE_NAME","endpointResolver","_ref","region","url","AmplifyUrl","concat","getDnsSuffix","disableCacheMiddleware","next","context","request","headers","cognitoIdentityTransferHandler","composeTransferHandler","unauthenticatedHandler","defaultConfig","service","retryDecider","getRetryDecider","parseJsonError","computeDelay","jitteredBackoff","userAgentValue","getAmplifyUserAgent","cache","observeFrameworkChanges","getSharedHeaders","operation","buildHttpRpcRequest","_ref2","body","method"],"sources":["/Users/sarimyun/react-native-app/room821_homepage/room821_homepage/node_modules/@aws-amplify/core/src/awsClients/cognitoIdentity/base.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { getDnsSuffix, unauthenticatedHandler, parseJsonError, } from '../../clients';\nimport { composeTransferHandler } from '../../clients/internal/composeTransferHandler';\nimport { jitteredBackoff, getRetryDecider, } from '../../clients/middleware/retry';\nimport { getAmplifyUserAgent } from '../../Platform';\nimport { observeFrameworkChanges } from '../../Platform/detectFramework';\nimport { AmplifyUrl } from '../../utils/amplifyUrl';\n/**\n * The service name used to sign requests if the API requires authentication.\n */\nconst SERVICE_NAME = 'cognito-identity';\n/**\n * The endpoint resolver function that returns the endpoint URL for a given region.\n */\nconst endpointResolver = ({ region }) => ({\n    url: new AmplifyUrl(`https://cognito-identity.${region}.${getDnsSuffix(region)}`),\n});\n/**\n * A Cognito Identity-specific middleware that disables caching for all requests.\n */\nconst disableCacheMiddleware = () => (next, context) => async function disableCacheMiddleware(request) {\n    request.headers['cache-control'] = 'no-store';\n    return next(request);\n};\n/**\n * A Cognito Identity-specific transfer handler that does NOT sign requests, and\n * disables caching.\n *\n * @internal\n */\nexport const cognitoIdentityTransferHandler = composeTransferHandler(unauthenticatedHandler, [disableCacheMiddleware]);\n/**\n * @internal\n */\nexport const defaultConfig = {\n    service: SERVICE_NAME,\n    endpointResolver,\n    retryDecider: getRetryDecider(parseJsonError),\n    computeDelay: jitteredBackoff,\n    userAgentValue: getAmplifyUserAgent(),\n    cache: 'no-store',\n};\nobserveFrameworkChanges(() => {\n    defaultConfig.userAgentValue = getAmplifyUserAgent();\n});\n/**\n * @internal\n */\nexport const getSharedHeaders = (operation) => ({\n    'content-type': 'application/x-amz-json-1.1',\n    'x-amz-target': `AWSCognitoIdentityService.${operation}`,\n});\n/**\n * @internal\n */\nexport const buildHttpRpcRequest = ({ url }, headers, body) => ({\n    headers,\n    url,\n    body,\n    method: 'POST',\n});\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AAOA;AACA;AACA;AACA,MAAMA,YAAY,GAAG,kBAAkB;AACvC;AACA;AACA;AACA,MAAMC,gBAAgB,GAAGC,IAAA;EAAA,IAAC;IAAEC;EAAM,CAAE,GAAAD,IAAA;EAAA,OAAM;IACtCE,GAAG,EAAE,IAAIC,UAAU,6BAAAC,MAAA,CAA6BH,MAAM,OAAAG,MAAA,CAAIC,YAAY,CAACJ,MAAM,CAAC,CAAE;EACpF,CAAC;AAAA,CAAC;AACF;AACA;AACA;AACA,MAAMK,sBAAsB,GAAGA,CAAA,KAAM,CAACC,IAAI,EAAEC,OAAO,KAAK,eAAeF,sBAAsBA,CAACG,OAAO,EAAE;EACnGA,OAAO,CAACC,OAAO,CAAC,eAAe,CAAC,GAAG,UAAU;EAC7C,OAAOH,IAAI,CAACE,OAAO,CAAC;AACxB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACY,MAACE,8BAA8B,GAAGC,sBAAsB,CAACC,sBAAsB,EAAE,CAACP,sBAAsB,CAAC;AACrH;AACA;AACA;AACY,MAACQ,aAAa,GAAG;EACzBC,OAAO,EAAEjB,YAAY;EACrBC,gBAAgB;EAChBiB,YAAY,EAAEC,eAAe,CAACC,cAAc,CAAC;EAC7CC,YAAY,EAAEC,eAAe;EAC7BC,cAAc,EAAEC,mBAAmB,EAAE;EACrCC,KAAK,EAAE;AACX;AACAC,uBAAuB,CAAC,MAAM;EAC1BV,aAAa,CAACO,cAAc,GAAGC,mBAAmB,EAAE;AACxD,CAAC,CAAC;AACF;AACA;AACA;AACY,MAACG,gBAAgB,GAAIC,SAAS,KAAM;EAC5C,cAAc,EAAE,4BAA4B;EAC5C,cAAc,+BAAAtB,MAAA,CAA+BsB,SAAS;AAC1D,CAAC;AACD;AACA;AACA;AACY,MAACC,mBAAmB,GAAGA,CAAAC,KAAA,EAAUlB,OAAO,EAAEmB,IAAI;EAAA,IAAtB;IAAE3B;EAAG,CAAE,GAAA0B,KAAA;EAAA,OAAqB;IAC5DlB,OAAO;IACPR,GAAG;IACH2B,IAAI;IACJC,MAAM,EAAE;EACZ,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}