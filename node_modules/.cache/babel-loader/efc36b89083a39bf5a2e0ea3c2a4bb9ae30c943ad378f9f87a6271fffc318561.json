{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nconst setCustomUserAgent = input => {\n  var _customUserAgentState;\n  // Save custom user-agent state & increment reference counter\n  // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n  customUserAgentState[input.category] = input.apis.reduce((acc, api) => {\n    var _acc$api;\n    return {\n      ...acc,\n      [api]: {\n        refCount: (_acc$api = acc[api]) !== null && _acc$api !== void 0 && _acc$api.refCount ? acc[api].refCount + 1 : 1,\n        additionalDetails: input.additionalDetails\n      }\n    };\n  }, (_customUserAgentState = customUserAgentState[input.category]) !== null && _customUserAgentState !== void 0 ? _customUserAgentState : {});\n  // Callback that cleans up state for APIs recorded by this call\n  let cleanUpCallbackCalled = false;\n  const cleanUpCallback = () => {\n    // Only allow the cleanup callback to be called once\n    if (cleanUpCallbackCalled) {\n      return;\n    }\n    cleanUpCallbackCalled = true;\n    input.apis.forEach(api => {\n      const apiRefCount = customUserAgentState[input.category][api].refCount;\n      if (apiRefCount > 1) {\n        customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n      } else {\n        delete customUserAgentState[input.category][api];\n        // Clean up category if no more APIs set\n        if (!Object.keys(customUserAgentState[input.category]).length) {\n          delete customUserAgentState[input.category];\n        }\n      }\n    });\n  };\n  return cleanUpCallback;\n};\nconst getCustomUserAgent = (category, api) => {\n  var _customUserAgentState2;\n  return (_customUserAgentState2 = customUserAgentState[category]) === null || _customUserAgentState2 === void 0 || (_customUserAgentState2 = _customUserAgentState2[api]) === null || _customUserAgentState2 === void 0 ? void 0 : _customUserAgentState2.additionalDetails;\n};\nexport { getCustomUserAgent, setCustomUserAgent };","map":{"version":3,"names":["customUserAgentState","setCustomUserAgent","input","_customUserAgentState","category","apis","reduce","acc","api","_acc$api","refCount","additionalDetails","cleanUpCallbackCalled","cleanUpCallback","forEach","apiRefCount","Object","keys","length","getCustomUserAgent","_customUserAgentState2"],"sources":["/Users/sarimyun/react-native-app/room821_homepage/room821_homepage/node_modules/@aws-amplify/core/src/Platform/customUserAgent.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n// Maintains custom user-agent state set by external consumers.\nconst customUserAgentState = {};\n/**\n * Sets custom user agent state which will be appended to applicable requests. Returns a function that can be used to\n * clean up any custom state set with this API.\n *\n * @note\n * This API operates globally. Calling this API multiple times will result in the most recently set values for a\n * particular API being used.\n *\n * @note\n * This utility IS NOT compatible with SSR.\n *\n * @param input - SetCustomUserAgentInput that defines custom state to apply to the specified APIs.\n */\nexport const setCustomUserAgent = (input) => {\n    // Save custom user-agent state & increment reference counter\n    // TODO Remove `any` when we upgrade to TypeScript 5.2, see: https://github.com/microsoft/TypeScript/issues/44373\n    customUserAgentState[input.category] = input.apis.reduce((acc, api) => ({\n        ...acc,\n        [api]: {\n            refCount: acc[api]?.refCount ? acc[api].refCount + 1 : 1,\n            additionalDetails: input.additionalDetails,\n        },\n    }), customUserAgentState[input.category] ?? {});\n    // Callback that cleans up state for APIs recorded by this call\n    let cleanUpCallbackCalled = false;\n    const cleanUpCallback = () => {\n        // Only allow the cleanup callback to be called once\n        if (cleanUpCallbackCalled) {\n            return;\n        }\n        cleanUpCallbackCalled = true;\n        input.apis.forEach(api => {\n            const apiRefCount = customUserAgentState[input.category][api].refCount;\n            if (apiRefCount > 1) {\n                customUserAgentState[input.category][api].refCount = apiRefCount - 1;\n            }\n            else {\n                delete customUserAgentState[input.category][api];\n                // Clean up category if no more APIs set\n                if (!Object.keys(customUserAgentState[input.category]).length) {\n                    delete customUserAgentState[input.category];\n                }\n            }\n        });\n    };\n    return cleanUpCallback;\n};\nexport const getCustomUserAgent = (category, api) => customUserAgentState[category]?.[api]?.additionalDetails;\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,oBAAoB,GAAG,EAAE;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACC,kBAAkB,GAAIC,KAAK,IAAK;EAAA,IAAAC,qBAAA;EAC7C;EACA;EACIH,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC,GAAGF,KAAK,CAACG,IAAI,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG;IAAA,IAAAC,QAAA;IAAA,OAAM;MACpE,GAAGF,GAAG;MACN,CAACC,GAAG,GAAG;QACHE,QAAQ,EAAE,CAAAD,QAAA,GAAAF,GAAG,CAACC,GAAG,CAAC,cAAAC,QAAA,eAARA,QAAA,CAAUC,QAAQ,GAAGH,GAAG,CAACC,GAAG,CAAC,CAACE,QAAQ,GAAG,CAAC,GAAG,CAAC;QACxDC,iBAAiB,EAAET,KAAK,CAACS;MACrC;IACA,CAAK;EAAA,CAAC,GAAAR,qBAAA,GAAEH,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC,cAAAD,qBAAA,cAAAA,qBAAA,GAAI,EAAE,CAAC;EACnD;EACI,IAAIS,qBAAqB,GAAG,KAAK;EACjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAClC;IACQ,IAAID,qBAAqB,EAAE;MACvB;IACZ;IACQA,qBAAqB,GAAG,IAAI;IAC5BV,KAAK,CAACG,IAAI,CAACS,OAAO,CAACN,GAAG,IAAI;MACtB,MAAMO,WAAW,GAAGf,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACE,QAAQ;MACtE,IAAIK,WAAW,GAAG,CAAC,EAAE;QACjBf,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC,CAACI,GAAG,CAAC,CAACE,QAAQ,GAAGK,WAAW,GAAG,CAAC;MACpF,CAAa,MACI;QACD,OAAOf,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC,CAACI,GAAG,CAAC;QAChE;QACgB,IAAI,CAACQ,MAAM,CAACC,IAAI,CAACjB,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC,CAAC,CAACc,MAAM,EAAE;UAC3D,OAAOlB,oBAAoB,CAACE,KAAK,CAACE,QAAQ,CAAC;QAC/D;MACA;IACA,CAAS,CAAC;EACV,CAAK;EACD,OAAOS,eAAe;AAC1B;AACY,MAACM,kBAAkB,GAAGA,CAACf,QAAQ,EAAEI,GAAG;EAAA,IAAAY,sBAAA;EAAA,QAAAA,sBAAA,GAAKpB,oBAAoB,CAACI,QAAQ,CAAC,cAAAgB,sBAAA,gBAAAA,sBAAA,GAA9BA,sBAAA,CAAiCZ,GAAG,CAAC,cAAAY,sBAAA,uBAArCA,sBAAA,CAAuCT,iBAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}